# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Evento\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Evento\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Evento\Domain\Exchange\ExchangeRepositoryInterface: '@Evento\Infrastructure\Doctrine\ExchangeRepository'
    Evento\Domain\Rate\RateRepositoryInterface: '@Evento\Infrastructure\Doctrine\RateRepository'
    Evento\Domain\User\UserRepositoryInterface: '@Evento\Infrastructure\Doctrine\UserRepository'
#   Evento\Domain\Event\EventRepositoryInterface: '@Evento\Infrastructure\Doctrine\EventRepository'
#   Evento\Domain\Ticket\TicketRepositoryInterface: '@Evento\Infrastructure\Doctrine\TicketRepository'
    Evento\Infrastructure\Services\FetchExchangeInterface: '@Evento\Infrastructure\Services\FetchExchange'
    Evento\Infrastructure\Services\FetchRateInterface: '@Evento\Infrastructure\Services\FetchRate'
